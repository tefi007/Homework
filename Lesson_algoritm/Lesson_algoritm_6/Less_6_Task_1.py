# Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, надо вывести 6843.
# Пользователь вводит только натуральные числа.

def size (n):
    import sys
    return sys.getsizeof(n)

# вариант 1
num = int(input('Ввведите любое натуральное число: '))
print(num)
num_new = ''

while num > 0:
    num_new += str(num % 10)
    num //= 10

print(num_new)
print('Памяти под переменные потрачено: ', size(num), '+', size(num_new), '=', size(num) + size(num_new))
print('#' * 20)


# вариант 2
# код без использования строк (теряется 0 в конце: 1230  и 321)

num_1 = int(input('Ввведите любое натуральное число: '))
print(num_1)
num_new_1 = 0
i_1 = 10

while num_1 > 0:
    bal_1 = num_1 % 10
    num_new_1 = (num_new_1 * i_1) + bal_1
    num_1 //= 10

print(num_new_1)
print('Памяти под переменные потрачено: ', size(num_1), '+', size(num_new_1), '+', size(i_1), '+', size(bal_1),'=', size(num_1) + size(num_new_1) + size(i_1) + size(bal_1))
print('#' * 20)

# вариант 3

num_2 = float(input('Ввведите любое натуральное число: '))
print(num_2)
num_new_2 = 0
i_2 = 10

while int(num_2) > 0:
    bal_2 = int(num_2) % 10
    num_new_2 = (num_new_2 * i_2) + bal_2
    num_2 //= 10

print(num_new_2)
print('Памяти под переменные потрачено: ', size(num_2), '+', size(num_new_2), '+', size(i_2), '+', size(bal_2),'=', size(num_2) + size(num_new_2) + size(i_2) + size(bal_2))

'''
Результат:

12345
54321
Памяти под переменные потрачено:  24 + 54 = 78
####################

12345
54321
Памяти под переменные потрачено:  24 + 28 + 28 + 28 = 108
####################

12345.5
54321
Памяти под переменные потрачено:  24 + 28 + 28 + 28 = 108

Как ни странно, но в последних 2 вариантах использование целочисленных и вещественных переменных оказалось абсолютно идентичным по памяти.
Выиграл вариант 1 с использованием строковой переменной num_new. Этот вариант оказался лучше и с точки зрения программной логики, и код короче,
и переменных меньше, и решение правильное при любых входных данных.
'''